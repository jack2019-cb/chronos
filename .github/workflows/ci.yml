name: CI

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:

env:
  NODE_ENV: test
  PORT: 3000
  API_PORT: 3001

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Server Setup, Lint, and Tests
      - name: Install server dependencies
        run: cd server && npm ci
      - name: Lint server code
        run: cd server && npm run lint
      - name: Run backend tests
        run: cd server && npm test

      # Client Setup, Lint, and Tests
      - name: Install client dependencies
        run: cd client && npm ci
      - name: Lint client code
        run: cd client && npm run lint
      - name: Run frontend tests
        run: cd client && npm test

      # Playwright Integration Tests
      - name: Install Playwright Browsers
        run: cd client && npx playwright install --with-deps
      - name: Build Next.js app
        run: cd client && npm run build
      
      # Start Services with Health Checks
      - name: Start backend server
        run: |
          cd server
          npm start &
          echo $! > ../server.pid
          echo "Waiting for server to be ready..."
          timeout 30s bash -c 'until curl -s http://localhost:${{ env.API_PORT }}/health; do sleep 2; done'
      
      - name: Start frontend
        run: |
          cd client
          npm start &
          echo $! > ../client.pid
          echo "Waiting for frontend to be ready..."
          timeout 30s bash -c 'until curl -s http://localhost:${{ env.PORT }}; do sleep 2; done'

      - name: Run Playwright Tests
        run: cd client && npm run test:e2e
      
      # Always upload test reports
      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: client/playwright-report/
          retention-days: 30

      # Cleanup
      - name: Stop services
        if: always()
        run: |
          kill $(cat server.pid) || true
          kill $(cat client.pid) || true
