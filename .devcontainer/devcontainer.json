{
  "name": "ChronosCraft Dev Env V1.0",
  "dockerComposeFile": "docker-compose.yml",
  "service": "app",
  "workspaceFolder": "/chronos",

  "features": {
    "ghcr.io/devcontainers/features/node:1": {
      "version": "lts"
    },
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true
    },
    
    "ghcr.io/devcontainers/features/github-cli:1": {}
  },

  "portsAttributes": {
    "3000": {
      "label": "frontend",
      "onAutoForward": "openPreview"
    },
    "5000": {
      "label": "backend",
      "onAutoForward": "openPreview"
    },
    "5432": {
      "label": "database",
      "onAutoForward": "openPreview"
    }
  },
  "forwardPorts": [3000, 5000, 5432],

  "customizations": {
    "vscode": {
      "settings": {
        "terminal.integrated.defaultProfile.linux": "zsh",
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "[javascript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "workbench.iconTheme": "vscode-icons",
        "github.copilot.enable": {
           "*": true,
           "plaintext": false,
           "markdown": true,
           "scminput": false
        }
      },
      "extensions": [
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "github.copilot",
        "github.copilot-chat",
        "ms-azuretools.vscode-docker",
        "ms-vscode.vscode-node-azure-pack",
        "humao.rest-client",
        "vscode-icons-team.vscode-icons",
        "prisma.prisma",
        "cweijan.vscode-postgresql-client2",
        "ms-vscode.vscode-typescript-next",
        "ms-azuretools.vscode-postgresql",
        "bradlc.vscode-tailwindcss",
        "formulahendry.auto-rename-tag",
        "dsznajder.es7-react-js-snippets"
      ]
    }
  },

  "postCreateCommand": "cd server && npm install && cd ../client && npm install",

  "remoteEnv": {
    "DATABASE_URL": "postgresql://${localEnv:POSTGRES_USER}:${localEnv:POSTGRES_PASSWORD}@db:5432/${localEnv:POSTGRES_DB}",
    "GEMINI_API_KEY": "${localEnv:GEMINI_API_KEY}"
  }
}
