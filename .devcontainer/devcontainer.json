{
  "name": "ChronosCraft v0.1 (Alpha)",
  "image": "mcr.microsoft.com/devcontainers/javascript-node:22-bullseye",

  "waitFor": "onCreateCommand",
  "postCreateCommand": "cd shared && npm install && cd ../client && npm install && cd ../server && npm install && cd ..",
  "postAttachCommand": {
    "client + server": "cd shared && npx concurrently 'cd ../client && npm run dev' 'cd ../server && npm run dev'"
  },

  // --- VS CODE CUSTOMIZATIONS ---
  "customizations": {
    "codespaces": {
      "openFiles": [
        "server/app.ts",
        "client/src/app/page.tsx",
        "README.md",
        "server/README.md",
        "client/README.md"
      ]
    },
    "vscode": {
      "extensions": [
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "github.copilot",
        "github.copilot-chat",
        "github.vscode-github-actions",
        "ms-azuretools.vscode-docker",
        "dsznajder.es7-react-js-snippets",
        "bradlc.vscode-tailwindcss",
        "prisma.prisma",
        "ms-azuretools.vscode-postgresql",
        "vscode-icons-team.vscode-icons"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "bash",
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "[javascript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "workbench.iconTheme": "vscode-icons",
        "github.copilot.enable": {
          "*": true,
          "plaintext": false,
          "markdown": true,
          "scminput": false
        }
      }
    }
  },

  // --- PORT FORWARDING ---
  "forwardPorts": [3000, 5000, 5432],
  "portsAttributes": {
    "3000": {
      "label": "client/FE (React/Next.js)",
      "onAutoForward": "openPreview"
    },
    "5000": { "label": "server/BE (Node.js/Express)" },
    "5432": { "label": "database (PostgreSQL)" }
  },

  // --- GENERAL SETTINGS ---
  "remoteEnv": {
    "DATABASE_URL": "${localEnv:DATABASE_URL}",
    "GEMINI_API_KEY": "${localEnv:GEMINI_API_KEY}",
    "GEMINI_API_URL": "${localEnv:GEMINI_API_URL}"
  },
  "remoteUser": "node",
  "hostRequirements": {
    "cpus": 4
  }
}
